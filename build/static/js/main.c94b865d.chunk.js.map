{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","columnDefs","headerName","field","sortable","filter","rowData","make","model","price","style","width","margin","className","display","direction","height","enableRtl","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAY,CACV,CAAEC,WAAY,uCAAUC,MAAO,OAAQC,UAAU,EAAMC,QAAQ,GAC/D,CAAEH,WAAY,qBAAOC,MAAO,QAASC,UAAU,EAAMC,QAAQ,GAC7D,CAAEH,WAAY,2BAAQC,MAAO,QAASC,UAAU,EAAMC,QAAQ,IAEhEC,QAAS,CACP,CAAEC,KAAM,UAAWC,MAAO,SAAUC,MAAO,KAC3C,CAAEF,KAAM,UAAWC,MAAO,SAAUC,MAAO,KAC3C,CAAEF,KAAM,UAAWC,MAAO,SAAUC,MAAO,OAX9B,E,0CAenB,WACE,OACE,sBAAKC,MAAO,CAACC,MAAM,cAAeC,OAAO,YAAzC,UACI,uBACF,qBAAKC,UAAU,uBAAuBH,MAAO,CAACI,QAAQ,eAAgBC,UAAW,MAAOJ,MAAO,IAAKK,OAAQ,KAA5G,SACE,cAAC,cAAD,CAAaC,UAAU,OAAOhB,WAAYiB,KAAKlB,MAAMC,WAAYK,QAASY,KAAKlB,MAAMM,YAEvF,qBAAKO,UAAU,uBAAuBH,MAAO,CAACI,QAAQ,eAAgBC,UAAW,MAAOJ,MAAO,IAAKK,OAAQ,KAA5G,SACE,cAAC,cAAD,CAAaC,UAAU,OAAOhB,WAAYiB,KAAKlB,MAAMC,WAAYK,QAASY,KAAKlB,MAAMM,mB,GAxB9Da,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c94b865d.chunk.js","sourcesContent":["import \"./index.css\"\nimport React, { Component } from 'react'\nimport \"ag-grid-community/dist/styles/ag-grid.css\"\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\"\nimport { AgGridReact } from 'ag-grid-react'\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnDefs: [\n        { headerName: 'سازنده', field: 'make', sortable: true, filter: true },\n        { headerName: 'مدل', field: 'model', sortable: true, filter: true },\n        { headerName: 'قیمت', field: 'price', sortable: true, filter: true },\n      ],\n      rowData: [\n        { make: 'Toyota1', model: 'model1', price: 3000 },\n        { make: 'Toyota2', model: 'model2', price: 4000 },\n        { make: 'Toyota3', model: 'model3', price: 5000 },\n      ]\n    }\n  }\n  render() {\n    return (\n      <div style={{width:\"fit-content\", margin:\"0px auto\"}}>\n          <br />\n        <div className=\"div1 ag-theme-balham\" style={{display:\"inline-block\", direction: \"rtl\", width: 620, height: 200 }}>\n          <AgGridReact enableRtl=\"true\" columnDefs={this.state.columnDefs} rowData={this.state.rowData} />\n        </div>\n        <div className=\"div2 ag-theme-balham\" style={{display:\"inline-block\", direction: \"rtl\", width: 620, height: 200 }}>\n          <AgGridReact enableRtl=\"true\" columnDefs={this.state.columnDefs} rowData={this.state.rowData} />\n        </div>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}